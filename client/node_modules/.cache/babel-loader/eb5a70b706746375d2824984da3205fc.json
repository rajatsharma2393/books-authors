{"ast":null,"code":"var _jsxFileName = \"/Users/rajatsharma/Documents/Practice/React/books_authors/src/components/Books/books.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as bookActions from \"../../actions/bookActions\";\nimport PropTypes from \"prop-types\";\n\nclass Books extends React.Component {\n  componentDidMount() {\n    if (!this.props.books || this.props.books.length === 0) {\n      this.props.loadBooks();\n    }\n  }\n\n  render() {\n    let booksComp = this.props.book;\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Books\");\n  }\n\n}\n\nBooks.propTypes = {\n  books: PropTypes.array.isRequired,\n  authors: PropTypes.array.isRequired,\n  apiCallInProgress: PropTypes.bool.isRequired,\n  loadBooks: PropTypes.func.isRequired,\n  deleteBook: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    books: state.books,\n    authors: state.authors,\n    apiCallInProgress: state.apiCallInProgress\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadBooks: () => dispatch(bookActions.loadBooks()),\n    deleteBook: book => dispatch(bookActions.deleteBook(book))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Books);","map":{"version":3,"sources":["/Users/rajatsharma/Documents/Practice/React/books_authors/src/components/Books/books.js"],"names":["React","connect","bookActions","PropTypes","Books","Component","componentDidMount","props","books","length","loadBooks","render","booksComp","book","propTypes","array","isRequired","authors","apiCallInProgress","bool","func","deleteBook","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,2BAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAClCC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAAC,KAAKC,KAAL,CAAWC,KAAZ,IAAqB,KAAKD,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,KAA4B,CAArD,EAAwD;AACtD,WAAKF,KAAL,CAAWG,SAAX;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,KAAKL,KAAL,CAAWM,IAA3B;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;;AAViC;;AAapCT,KAAK,CAACU,SAAN,GAAkB;AAChBN,EAAAA,KAAK,EAAEL,SAAS,CAACY,KAAV,CAAgBC,UADP;AAEhBC,EAAAA,OAAO,EAAEd,SAAS,CAACY,KAAV,CAAgBC,UAFT;AAGhBE,EAAAA,iBAAiB,EAAEf,SAAS,CAACgB,IAAV,CAAeH,UAHlB;AAIhBN,EAAAA,SAAS,EAAEP,SAAS,CAACiB,IAAV,CAAeJ,UAJV;AAKhBK,EAAAA,UAAU,EAAElB,SAAS,CAACiB,IAAV,CAAeJ;AALX,CAAlB;;AAQA,SAASM,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLf,IAAAA,KAAK,EAAEe,KAAK,CAACf,KADR;AAELS,IAAAA,OAAO,EAAEM,KAAK,CAACN,OAFV;AAGLC,IAAAA,iBAAiB,EAAEK,KAAK,CAACL;AAHpB,GAAP;AAKD;;AAED,SAASM,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLf,IAAAA,SAAS,EAAE,MAAMe,QAAQ,CAACvB,WAAW,CAACQ,SAAZ,EAAD,CADpB;AAELW,IAAAA,UAAU,EAAER,IAAI,IAAIY,QAAQ,CAACvB,WAAW,CAACmB,UAAZ,CAAuBR,IAAvB,CAAD;AAFvB,GAAP;AAID;;AAED,eAAeZ,OAAO,CACpBqB,eADoB,EAEpBE,kBAFoB,CAAP,CAGbpB,KAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as bookActions from \"../../actions/bookActions\";\nimport PropTypes from \"prop-types\";\n\nclass Books extends React.Component {\n  componentDidMount() {\n    if (!this.props.books || this.props.books.length === 0) {\n      this.props.loadBooks();\n    }\n  }\n\n  render() {\n    let booksComp = this.props.book;\n    return <h1>Books</h1>;\n  }\n}\n\nBooks.propTypes = {\n  books: PropTypes.array.isRequired,\n  authors: PropTypes.array.isRequired,\n  apiCallInProgress: PropTypes.bool.isRequired,\n  loadBooks: PropTypes.func.isRequired,\n  deleteBook: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    books: state.books,\n    authors: state.authors,\n    apiCallInProgress: state.apiCallInProgress\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadBooks: () => dispatch(bookActions.loadBooks()),\n    deleteBook: book => dispatch(bookActions.deleteBook(book))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Books);\n"]},"metadata":{},"sourceType":"module"}