{"ast":null,"code":"import _objectSpread from \"/Users/rajatsharma/Documents/Practice/React/books_authors/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/rajatsharma/Documents/Practice/React/books_authors/src/components/Author/manageAuthor.js\";\nimport React, { Component } from \"react\";\nimport { updateAuthor, addAuthor } from \"../../actions/authorActions\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass ManageAuthor extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      author: _objectSpread({}, this.props.currentAuthor)\n    };\n\n    this.handleChange = event => {\n      let _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState({\n        author: _objectSpread({}, this.state.author, {\n          [name]: value\n        })\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.author.id) {\n        this.props.updateAuthor(this.state.author);\n      } else {\n        this.props.addAuthor(this.state.author);\n      }\n\n      this.props.history.push(\"/authors\");\n    };\n\n    this.handleAddAnotherBook = () => {\n      this.props.history.push(\"/book/0\", {\n        id: 7,\n        color: \"green\"\n      });\n    };\n  }\n\n  render() {\n    let author = this.state.author;\n    let currentAuthorBooks = this.props.books.filter(book => book.authorId === author.id);\n    let books = currentAuthorBooks.map(book => React.createElement(\"li\", {\n      key: book.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, book.name));\n    return React.createElement(React.Fragment, null, this.props.books.length === 0 && React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Author Id:\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: author.id,\n      onChange: this.handleChange,\n      name: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Author Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: author.name,\n      onChange: this.handleChange,\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, books), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleAddAnotherBook,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Add another Book\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, author.id === 0 ? \"Add\" : \"Update\")));\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const authorId = parseInt(ownProps.match.params.id);\n  let currentAuthor = {\n    id: 0,\n    name: \"\",\n    bookIds: []\n  };\n\n  if (authorId !== 0 && state.authors.length > 0) {\n    currentAuthor = state.authors.find(author => author.id === authorId) || currentAuthor;\n  }\n\n  return {\n    currentAuthor: currentAuthor,\n    books: state.books,\n    authors: state.authors\n  };\n}\n\nconst mapDispatchToProps = {\n  updateAuthor,\n  addAuthor\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageAuthor);","map":{"version":3,"sources":["/Users/rajatsharma/Documents/Practice/React/books_authors/src/components/Author/manageAuthor.js"],"names":["React","Component","updateAuthor","addAuthor","connect","Link","Redirect","ManageAuthor","state","author","props","currentAuthor","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","id","history","push","handleAddAnotherBook","color","render","currentAuthorBooks","books","filter","book","authorId","map","length","mapStateToProps","ownProps","parseInt","match","params","bookIds","authors","find","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,6BAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCO,KADmC,GAC3B;AAAEC,MAAAA,MAAM,oBAAO,KAAKC,KAAL,CAAWC,aAAlB;AAAR,KAD2B;;AAAA,SAGnCC,YAHmC,GAGpBC,KAAK,IAAI;AAAA,0BACAA,KAAK,CAACC,MADN;AAAA,UAChBC,IADgB,iBAChBA,IADgB;AAAA,UACVC,KADU,iBACVA,KADU;AAEtB,WAAKC,QAAL,CAAc;AACZR,QAAAA,MAAM,oBACD,KAAKD,KAAL,CAAWC,MADV;AAEJ,WAACM,IAAD,GAAQC;AAFJ;AADM,OAAd;AAMD,KAXkC;;AAAA,SAanCE,YAbmC,GAapBL,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACM,cAAN;;AACA,UAAI,KAAKX,KAAL,CAAWC,MAAX,CAAkBW,EAAtB,EAA0B;AACxB,aAAKV,KAAL,CAAWR,YAAX,CAAwB,KAAKM,KAAL,CAAWC,MAAnC;AACD,OAFD,MAEO;AACL,aAAKC,KAAL,CAAWP,SAAX,CAAqB,KAAKK,KAAL,CAAWC,MAAhC;AACD;;AACD,WAAKC,KAAL,CAAWW,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACD,KArBkC;;AAAA,SAuBnCC,oBAvBmC,GAuBZ,MAAM;AAC3B,WAAKb,KAAL,CAAWW,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB,EAAmC;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASI,QAAAA,KAAK,EAAE;AAAhB,OAAnC;AACD,KAzBkC;AAAA;;AA2BnCC,EAAAA,MAAM,GAAG;AACP,QAAIhB,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACA,QAAIiB,kBAAkB,GAAG,KAAKhB,KAAL,CAAWiB,KAAX,CAAiBC,MAAjB,CACvBC,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBrB,MAAM,CAACW,EADV,CAAzB;AAGA,QAAIO,KAAK,GAAGD,kBAAkB,CAACK,GAAnB,CAAuBF,IAAI,IACrC;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACT,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBS,IAAI,CAACd,IAAxB,CADU,CAAZ;AAGA,WACE,0CACG,KAAKL,KAAL,CAAWiB,KAAX,CAAiBK,MAAjB,KAA4B,CAA5B,IAAiC,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADpC,EAEE;AAAM,MAAA,QAAQ,EAAE,KAAKd,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAET,MAAM,CAACW,EAFhB;AAGE,MAAA,QAAQ,EAAE,KAAKR,YAHjB;AAIE,MAAA,IAAI,EAAC,IAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,EAUE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEH,MAAM,CAACM,IAFhB;AAGE,MAAA,QAAQ,EAAE,KAAKH,YAHjB;AAIE,MAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKe,KAAL,CAjBF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,EAmBE;AAAQ,MAAA,OAAO,EAAE,KAAKJ,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAnBF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,EAqBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBd,MAAM,CAACW,EAAP,KAAc,CAAd,GAAkB,KAAlB,GAA0B,QAAjD,CArBF,CAFF,CADF;AA4BD;;AA/DkC;;AAkErC,SAASa,eAAT,CAAyBzB,KAAzB,EAAgC0B,QAAhC,EAA0C;AACxC,QAAMJ,QAAQ,GAAGK,QAAQ,CAACD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBjB,EAAvB,CAAzB;AAEA,MAAIT,aAAa,GAAG;AAClBS,IAAAA,EAAE,EAAE,CADc;AAElBL,IAAAA,IAAI,EAAE,EAFY;AAGlBuB,IAAAA,OAAO,EAAE;AAHS,GAApB;;AAMA,MAAIR,QAAQ,KAAK,CAAb,IAAkBtB,KAAK,CAAC+B,OAAN,CAAcP,MAAd,GAAuB,CAA7C,EAAgD;AAC9CrB,IAAAA,aAAa,GACXH,KAAK,CAAC+B,OAAN,CAAcC,IAAd,CAAmB/B,MAAM,IAAIA,MAAM,CAACW,EAAP,KAAcU,QAA3C,KAAwDnB,aAD1D;AAED;;AAED,SAAO;AACLA,IAAAA,aAAa,EAAEA,aADV;AAELgB,IAAAA,KAAK,EAAEnB,KAAK,CAACmB,KAFR;AAGLY,IAAAA,OAAO,EAAE/B,KAAK,CAAC+B;AAHV,GAAP;AAKD;;AAED,MAAME,kBAAkB,GAAG;AACzBvC,EAAAA,YADyB;AAEzBC,EAAAA;AAFyB,CAA3B;AAKA,eAAeC,OAAO,CACpB6B,eADoB,EAEpBQ,kBAFoB,CAAP,CAGblC,YAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { updateAuthor, addAuthor } from \"../../actions/authorActions\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass ManageAuthor extends Component {\n  state = { author: { ...this.props.currentAuthor } };\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({\n      author: {\n        ...this.state.author,\n        [name]: value\n      }\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.author.id) {\n      this.props.updateAuthor(this.state.author);\n    } else {\n      this.props.addAuthor(this.state.author);\n    }\n    this.props.history.push(\"/authors\");\n  };\n\n  handleAddAnotherBook = () => {\n    this.props.history.push(\"/book/0\", { id: 7, color: \"green\" });\n  };\n\n  render() {\n    let author = this.state.author;\n    let currentAuthorBooks = this.props.books.filter(\n      book => book.authorId === author.id\n    );\n    let books = currentAuthorBooks.map(book => (\n      <li key={book.id}>{book.name}</li>\n    ));\n    return (\n      <>\n        {this.props.books.length === 0 && <Redirect to=\"/\" />}\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"id\">Author Id:</label>\n          <input\n            type=\"text\"\n            value={author.id}\n            onChange={this.handleChange}\n            name=\"id\"\n          />\n          <br />\n          <label htmlFor=\"name\">Author Name:</label>\n          <input\n            type=\"text\"\n            value={author.name}\n            onChange={this.handleChange}\n            name=\"name\"\n          />\n          <br />\n          <ul>{books}</ul>\n          <br />\n          <button onClick={this.handleAddAnotherBook}>Add another Book</button>\n          <br />\n          <button type=\"submit\">{author.id === 0 ? \"Add\" : \"Update\"}</button>\n        </form>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const authorId = parseInt(ownProps.match.params.id);\n\n  let currentAuthor = {\n    id: 0,\n    name: \"\",\n    bookIds: []\n  };\n\n  if (authorId !== 0 && state.authors.length > 0) {\n    currentAuthor =\n      state.authors.find(author => author.id === authorId) || currentAuthor;\n  }\n\n  return {\n    currentAuthor: currentAuthor,\n    books: state.books,\n    authors: state.authors\n  };\n}\n\nconst mapDispatchToProps = {\n  updateAuthor,\n  addAuthor\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ManageAuthor);\n"]},"metadata":{},"sourceType":"module"}