{"ast":null,"code":"import _objectSpread from \"/Users/rajatsharma/Documents/Practice/React/books_authors/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/rajatsharma/Documents/Practice/React/books_authors/src/components/Books/manageBook.js\";\nimport React, { Component } from \"react\";\nimport { updateBook, addBook } from \"../../actions/bookActions\";\nimport { connect } from \"react-redux\";\n\nclass ManageBook extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = _objectSpread({}, this.props.currentBook);\n\n    this.handleChange = event => {};\n  }\n\n  render() {\n    let book = this.props.currentBook;\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: book.id,\n      onChange: this.handleChange,\n      name: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      value: book.name,\n      onChange: this.handleChange,\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const bookId = ownProps.match.params.id;\n  let currentBook = {\n    bookId: 0,\n    bookName: \"\",\n    authorId: 0\n  };\n\n  if (bookId && state.books.length > 0) {\n    currentBook = state.books.find(book => book.id === bookId) || currentBook;\n  }\n\n  return {\n    currentBook: currentBook,\n    books: state.books,\n    authors: state.authors\n  };\n}\n\nconst mapDispatchToProps = {\n  updateBook,\n  addBook\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageBook);","map":{"version":3,"sources":["/Users/rajatsharma/Documents/Practice/React/books_authors/src/components/Books/manageBook.js"],"names":["React","Component","updateBook","addBook","connect","ManageBook","state","props","currentBook","handleChange","event","render","book","id","name","mapStateToProps","ownProps","bookId","match","params","bookName","authorId","books","length","find","authors","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,2BAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCK,KADiC,qBACpB,KAAKC,KAAL,CAAWC,WADS;;AAAA,SAEjCC,YAFiC,GAElBC,KAAK,IAAI,CAAE,CAFO;AAAA;;AAGjCC,EAAAA,MAAM,GAAG;AACP,QAAIC,IAAI,GAAG,KAAKL,KAAL,CAAWC,WAAtB;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEI,IAAI,CAACC,EAFd;AAGE,MAAA,QAAQ,EAAE,KAAKJ,YAHjB;AAIE,MAAA,IAAI,EAAC,IAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEG,IAAI,CAACE,IAFd;AAGE,MAAA,QAAQ,EAAE,KAAKL,YAHjB;AAIE,MAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAgBD;;AAtBgC;;AAyBnC,SAASM,eAAT,CAAyBT,KAAzB,EAAgCU,QAAhC,EAA0C;AACxC,QAAMC,MAAM,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBN,EAArC;AAEA,MAAIL,WAAW,GAAG;AAChBS,IAAAA,MAAM,EAAE,CADQ;AAEhBG,IAAAA,QAAQ,EAAE,EAFM;AAGhBC,IAAAA,QAAQ,EAAE;AAHM,GAAlB;;AAMA,MAAIJ,MAAM,IAAIX,KAAK,CAACgB,KAAN,CAAYC,MAAZ,GAAqB,CAAnC,EAAsC;AACpCf,IAAAA,WAAW,GAAGF,KAAK,CAACgB,KAAN,CAAYE,IAAZ,CAAiBZ,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYI,MAArC,KAAgDT,WAA9D;AACD;;AAED,SAAO;AACLA,IAAAA,WAAW,EAAEA,WADR;AAELc,IAAAA,KAAK,EAAEhB,KAAK,CAACgB,KAFR;AAGLG,IAAAA,OAAO,EAAEnB,KAAK,CAACmB;AAHV,GAAP;AAKD;;AAED,MAAMC,kBAAkB,GAAG;AACzBxB,EAAAA,UADyB;AAEzBC,EAAAA;AAFyB,CAA3B;AAKA,eAAeC,OAAO,CACpBW,eADoB,EAEpBW,kBAFoB,CAAP,CAGbrB,UAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { updateBook, addBook } from \"../../actions/bookActions\";\nimport { connect } from \"react-redux\";\n\nclass ManageBook extends Component {\n  state = { ...this.props.currentBook };\n  handleChange = event => {};\n  render() {\n    let book = this.props.currentBook;\n\n    return (\n      <form>\n        <input\n          type=\"text\"\n          value={book.id}\n          onChange={this.handleChange}\n          name=\"id\"\n        />\n        <input\n          type=\"text\"\n          value={book.name}\n          onChange={this.handleChange}\n          name=\"name\"\n        />\n      </form>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const bookId = ownProps.match.params.id;\n\n  let currentBook = {\n    bookId: 0,\n    bookName: \"\",\n    authorId: 0\n  };\n\n  if (bookId && state.books.length > 0) {\n    currentBook = state.books.find(book => book.id === bookId) || currentBook;\n  }\n\n  return {\n    currentBook: currentBook,\n    books: state.books,\n    authors: state.authors\n  };\n}\n\nconst mapDispatchToProps = {\n  updateBook,\n  addBook\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ManageBook);\n"]},"metadata":{},"sourceType":"module"}