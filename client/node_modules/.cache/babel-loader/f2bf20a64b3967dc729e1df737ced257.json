{"ast":null,"code":"import _objectSpread from\"/Users/rajatsharma/Documents/Practice/React/books_authors/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/rajatsharma/Documents/Practice/React/books_authors/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import*as types from\"../actions/actionType\";import initialState from\"./initialState\";export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState.authors;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case types.ADD_AUTHOR:return[].concat(_toConsumableArray(state),[_objectSpread({},action.author)]);case types.UPDATE_AUTHOR:return state.map(function(author){return author.id===action.author.id?action.author:author;});case types.GET_AUTHORS:return _toConsumableArray(action.authors);case types.DELETE_AUTHOR:return state.filter(function(author){return author.id!==action.author.id;});default:return state;}});","map":{"version":3,"sources":["/Users/rajatsharma/Documents/Practice/React/books_authors/src/reducers/author.js"],"names":["types","initialState","state","authors","action","type","ADD_AUTHOR","author","UPDATE_AUTHOR","map","id","GET_AUTHORS","DELETE_AUTHOR","filter"],"mappings":"+RAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,uBAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,eAAe,UAA0C,IAAzCC,CAAAA,KAAyC,2DAAjCD,YAAY,CAACE,OAAoB,IAAXC,CAAAA,MAAW,2CACvD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKL,CAAAA,KAAK,CAACM,UAAX,CACE,mCAAWJ,KAAX,oBAAuBE,MAAM,CAACG,MAA9B,IACF,IAAKP,CAAAA,KAAK,CAACQ,aAAX,CACE,MAAON,CAAAA,KAAK,CAACO,GAAN,CAAU,SAAAF,MAAM,CAAI,CACzB,MAAOA,CAAAA,MAAM,CAACG,EAAP,GAAcN,MAAM,CAACG,MAAP,CAAcG,EAA5B,CAAiCN,MAAM,CAACG,MAAxC,CAAiDA,MAAxD,CACD,CAFM,CAAP,CAGF,IAAKP,CAAAA,KAAK,CAACW,WAAX,CACE,0BAAWP,MAAM,CAACD,OAAlB,EACF,IAAKH,CAAAA,KAAK,CAACY,aAAX,CACE,MAAOV,CAAAA,KAAK,CAACW,MAAN,CAAa,SAAAN,MAAM,QAAIA,CAAAA,MAAM,CAACG,EAAP,GAAcN,MAAM,CAACG,MAAP,CAAcG,EAAhC,EAAnB,CAAP,CACF,QACE,MAAOR,CAAAA,KAAP,CAZJ,CAcD,CAfD","sourcesContent":["import * as types from \"../actions/actionType\";\nimport initialState from \"./initialState\";\n\nexport default (state = initialState.authors, action) => {\n  switch (action.type) {\n    case types.ADD_AUTHOR:\n      return [...state, { ...action.author }];\n    case types.UPDATE_AUTHOR:\n      return state.map(author => {\n        return author.id === action.author.id ? action.author : author;\n      });\n    case types.GET_AUTHORS:\n      return [...action.authors];\n    case types.DELETE_AUTHOR:\n      return state.filter(author => author.id !== action.author.id);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}