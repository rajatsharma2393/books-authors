{"ast":null,"code":"var _jsxFileName = \"/Users/rajatsharma/Documents/Practice/React/books_authors/src/components/Books/books.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as bookActions from \"../../actions/bookActions\";\nimport PropTypes from \"prop-types\";\n\nclass Books extends React.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          books = _this$props.books,\n          authors = _this$props.authors,\n          apiCallInProgress = _this$props.apiCallInProgress,\n          loadBooks = _this$props.loadBooks,\n          deleteBook = _this$props.deleteBook;\n\n    if (!books || books.length === 0) {\n      loadBooks();\n    }\n  }\n\n  render() {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Books\");\n  }\n\n}\n\nBooks.propTypes = {\n  books: PropTypes.array.isRequired,\n  authors: PropTypes.array.isRequired,\n  apiCallInProgress: PropTypes.bool.isRequired,\n  loadBooks: PropTypes.func.isRequired,\n  deleteBook: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    books: state.books,\n    authors: state.authors,\n    apiCallInProgress: state.apiCallInProgress\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadBooks: () => dispatch(bookActions.loadBooks()),\n    deleteBook: book => dispatch(bookActions.deleteBook(book))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Books);","map":{"version":3,"sources":["/Users/rajatsharma/Documents/Practice/React/books_authors/src/components/Books/books.js"],"names":["React","connect","bookActions","PropTypes","Books","Component","componentDidMount","props","books","authors","apiCallInProgress","loadBooks","deleteBook","length","render","propTypes","array","isRequired","bool","func","mapStateToProps","state","mapDispatchToProps","dispatch","book"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,2BAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAClCC,EAAAA,iBAAiB,GAAG;AAAA,wBAOd,KAAKC,KAPS;AAAA,UAEhBC,KAFgB,eAEhBA,KAFgB;AAAA,UAGhBC,OAHgB,eAGhBA,OAHgB;AAAA,UAIhBC,iBAJgB,eAIhBA,iBAJgB;AAAA,UAKhBC,SALgB,eAKhBA,SALgB;AAAA,UAMhBC,UANgB,eAMhBA,UANgB;;AASlB,QAAI,CAACJ,KAAD,IAAUA,KAAK,CAACK,MAAN,KAAiB,CAA/B,EAAkC;AAChCF,MAAAA,SAAS;AACV;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;;AAjBiC;;AAoBpCV,KAAK,CAACW,SAAN,GAAkB;AAChBP,EAAAA,KAAK,EAAEL,SAAS,CAACa,KAAV,CAAgBC,UADP;AAEhBR,EAAAA,OAAO,EAAEN,SAAS,CAACa,KAAV,CAAgBC,UAFT;AAGhBP,EAAAA,iBAAiB,EAAEP,SAAS,CAACe,IAAV,CAAeD,UAHlB;AAIhBN,EAAAA,SAAS,EAAER,SAAS,CAACgB,IAAV,CAAeF,UAJV;AAKhBL,EAAAA,UAAU,EAAET,SAAS,CAACgB,IAAV,CAAeF;AALX,CAAlB;;AAQA,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLb,IAAAA,KAAK,EAAEa,KAAK,CAACb,KADR;AAELC,IAAAA,OAAO,EAAEY,KAAK,CAACZ,OAFV;AAGLC,IAAAA,iBAAiB,EAAEW,KAAK,CAACX;AAHpB,GAAP;AAKD;;AAED,SAASY,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLZ,IAAAA,SAAS,EAAE,MAAMY,QAAQ,CAACrB,WAAW,CAACS,SAAZ,EAAD,CADpB;AAELC,IAAAA,UAAU,EAAEY,IAAI,IAAID,QAAQ,CAACrB,WAAW,CAACU,UAAZ,CAAuBY,IAAvB,CAAD;AAFvB,GAAP;AAID;;AAED,eAAevB,OAAO,CACpBmB,eADoB,EAEpBE,kBAFoB,CAAP,CAGblB,KAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as bookActions from \"../../actions/bookActions\";\nimport PropTypes from \"prop-types\";\n\nclass Books extends React.Component {\n  componentDidMount() {\n    const {\n      books,\n      authors,\n      apiCallInProgress,\n      loadBooks,\n      deleteBook\n    } = this.props;\n\n    if (!books || books.length === 0) {\n      loadBooks();\n    }\n  }\n\n  render() {\n    return <h1>Books</h1>;\n  }\n}\n\nBooks.propTypes = {\n  books: PropTypes.array.isRequired,\n  authors: PropTypes.array.isRequired,\n  apiCallInProgress: PropTypes.bool.isRequired,\n  loadBooks: PropTypes.func.isRequired,\n  deleteBook: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    books: state.books,\n    authors: state.authors,\n    apiCallInProgress: state.apiCallInProgress\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadBooks: () => dispatch(bookActions.loadBooks()),\n    deleteBook: book => dispatch(bookActions.deleteBook(book))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Books);\n"]},"metadata":{},"sourceType":"module"}