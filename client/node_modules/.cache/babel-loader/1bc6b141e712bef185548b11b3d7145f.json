{"ast":null,"code":"import * as types from \"./actionType\";\nexport function addBook(book) {\n  return {\n    type: types.ADD_BOOK,\n    book\n  };\n}\nexport function updateBook(book) {\n  return {\n    type: types.UPDATE_BOOK,\n    book\n  };\n}\nexport function getBooks(books) {\n  return {\n    type: types.GET_BOOKS,\n    books\n  };\n}\n\nfunction switchApiCallStatus() {\n  return {\n    type: types.SWITCH\n  };\n}\n\nfunction getBooksFromApi() {\n  let books = [{\n    id: 1,\n    name: \"First Book\",\n    authorId: 2,\n    rating: 3.5\n  }, {\n    id: 2,\n    name: \"Second Book\",\n    authorId: 1,\n    rating: 2.5\n  }, {\n    id: 3,\n    name: \"Third Book\",\n    authorId: 3,\n    rating: 4.5\n  }];\n  return new Promise((resolve, reject) => {\n    // setTimeout(() => {\n    //   resolve(books);\n    // }, 1000);\n    resolve(books);\n  });\n}\n\nexport function loadBooks() {\n  return function (dispatch) {\n    console.log(\"Switch from get books\");\n    dispatch(switchApiCallStatus());\n    return getBooksFromApi().then(books => {\n      dispatch(getBooks(books));\n      console.log(\"Switch from get books 2\");\n      dispatch(switchApiCallStatus());\n    });\n  };\n}\nexport function deleteBook(book) {\n  return {\n    type: types.DELETE_BOOK,\n    book\n  };\n}","map":{"version":3,"sources":["/Users/rajatsharma/Documents/Practice/React/books_authors/src/actions/bookActions.js"],"names":["types","addBook","book","type","ADD_BOOK","updateBook","UPDATE_BOOK","getBooks","books","GET_BOOKS","switchApiCallStatus","SWITCH","getBooksFromApi","id","name","authorId","rating","Promise","resolve","reject","loadBooks","dispatch","console","log","then","deleteBook","DELETE_BOOK"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,cAAvB;AAEA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAC5B,SAAO;AAAEC,IAAAA,IAAI,EAAEH,KAAK,CAACI,QAAd;AAAwBF,IAAAA;AAAxB,GAAP;AACD;AAED,OAAO,SAASG,UAAT,CAAoBH,IAApB,EAA0B;AAC/B,SAAO;AAAEC,IAAAA,IAAI,EAAEH,KAAK,CAACM,WAAd;AAA2BJ,IAAAA;AAA3B,GAAP;AACD;AAED,OAAO,SAASK,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,SAAO;AAAEL,IAAAA,IAAI,EAAEH,KAAK,CAACS,SAAd;AAAyBD,IAAAA;AAAzB,GAAP;AACD;;AAED,SAASE,mBAAT,GAA+B;AAC7B,SAAO;AAAEP,IAAAA,IAAI,EAAEH,KAAK,CAACW;AAAd,GAAP;AACD;;AAED,SAASC,eAAT,GAA2B;AACzB,MAAIJ,KAAK,GAAG,CACV;AACEK,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,QAAQ,EAAE,CAHZ;AAIEC,IAAAA,MAAM,EAAE;AAJV,GADU,EAOV;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,QAAQ,EAAE,CAHZ;AAIEC,IAAAA,MAAM,EAAE;AAJV,GAPU,EAaV;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,QAAQ,EAAE,CAHZ;AAIEC,IAAAA,MAAM,EAAE;AAJV,GAbU,CAAZ;AAoBA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC;AACA;AACA;AACAD,IAAAA,OAAO,CAACV,KAAD,CAAP;AACD,GALM,CAAP;AAMD;;AAED,OAAO,SAASY,SAAT,GAAqB;AAC1B,SAAO,UAASC,QAAT,EAAmB;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAF,IAAAA,QAAQ,CAACX,mBAAmB,EAApB,CAAR;AACA,WAAOE,eAAe,GAAGY,IAAlB,CAAuBhB,KAAK,IAAI;AACrCa,MAAAA,QAAQ,CAACd,QAAQ,CAACC,KAAD,CAAT,CAAR;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAF,MAAAA,QAAQ,CAACX,mBAAmB,EAApB,CAAR;AACD,KAJM,CAAP;AAKD,GARD;AASD;AAED,OAAO,SAASe,UAAT,CAAoBvB,IAApB,EAA0B;AAC/B,SAAO;AAAEC,IAAAA,IAAI,EAAEH,KAAK,CAAC0B,WAAd;AAA2BxB,IAAAA;AAA3B,GAAP;AACD","sourcesContent":["import * as types from \"./actionType\";\n\nexport function addBook(book) {\n  return { type: types.ADD_BOOK, book };\n}\n\nexport function updateBook(book) {\n  return { type: types.UPDATE_BOOK, book };\n}\n\nexport function getBooks(books) {\n  return { type: types.GET_BOOKS, books };\n}\n\nfunction switchApiCallStatus() {\n  return { type: types.SWITCH };\n}\n\nfunction getBooksFromApi() {\n  let books = [\n    {\n      id: 1,\n      name: \"First Book\",\n      authorId: 2,\n      rating: 3.5\n    },\n    {\n      id: 2,\n      name: \"Second Book\",\n      authorId: 1,\n      rating: 2.5\n    },\n    {\n      id: 3,\n      name: \"Third Book\",\n      authorId: 3,\n      rating: 4.5\n    }\n  ];\n  return new Promise((resolve, reject) => {\n    // setTimeout(() => {\n    //   resolve(books);\n    // }, 1000);\n    resolve(books);\n  });\n}\n\nexport function loadBooks() {\n  return function(dispatch) {\n    console.log(\"Switch from get books\");\n    dispatch(switchApiCallStatus());\n    return getBooksFromApi().then(books => {\n      dispatch(getBooks(books));\n      console.log(\"Switch from get books 2\");\n      dispatch(switchApiCallStatus());\n    });\n  };\n}\n\nexport function deleteBook(book) {\n  return { type: types.DELETE_BOOK, book };\n}\n"]},"metadata":{},"sourceType":"module"}