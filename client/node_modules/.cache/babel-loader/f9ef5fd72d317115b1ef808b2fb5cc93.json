{"ast":null,"code":"import _objectSpread from \"/Users/rajatsharma/Documents/Practice/React/books_authors/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as types from \"../actions/actionType\";\nimport initialState from \"./initialState\";\nexport default ((state = initialState.books, action) => {\n  console.log(action.type);\n\n  switch (action.type) {\n    case types.ADD_BOOK:\n      return [...state, _objectSpread({}, action.book)];\n\n    case types.UPDATE_BOOK:\n      return state.map(book => {\n        return book.id === action.book.id ? action.book : book;\n      });\n\n    case types.GET_BOOKS:\n      return [...action.books];\n\n    case types.DELETE_BOOK:\n      return state.filter(book => book.id !== action.book.id);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/rajatsharma/Documents/Practice/React/books_authors/src/reducers/book.js"],"names":["types","initialState","state","books","action","console","log","type","ADD_BOOK","book","UPDATE_BOOK","map","id","GET_BOOKS","DELETE_BOOK","filter"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,uBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,gBAAe,CAACC,KAAK,GAAGD,YAAY,CAACE,KAAtB,EAA6BC,MAA7B,KAAwC;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;;AACA,UAAQH,MAAM,CAACG,IAAf;AACE,SAAKP,KAAK,CAACQ,QAAX;AACE,aAAO,CAAC,GAAGN,KAAJ,oBAAgBE,MAAM,CAACK,IAAvB,EAAP;;AACF,SAAKT,KAAK,CAACU,WAAX;AACE,aAAOR,KAAK,CAACS,GAAN,CAAUF,IAAI,IAAI;AACvB,eAAOA,IAAI,CAACG,EAAL,KAAYR,MAAM,CAACK,IAAP,CAAYG,EAAxB,GAA6BR,MAAM,CAACK,IAApC,GAA2CA,IAAlD;AACD,OAFM,CAAP;;AAGF,SAAKT,KAAK,CAACa,SAAX;AACE,aAAO,CAAC,GAAGT,MAAM,CAACD,KAAX,CAAP;;AACF,SAAKH,KAAK,CAACc,WAAX;AACE,aAAOZ,KAAK,CAACa,MAAN,CAAaN,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYR,MAAM,CAACK,IAAP,CAAYG,EAA7C,CAAP;;AACF;AACE,aAAOV,KAAP;AAZJ;AAcD,CAhBD","sourcesContent":["import * as types from \"../actions/actionType\";\nimport initialState from \"./initialState\";\n\nexport default (state = initialState.books, action) => {\n  console.log(action.type);\n  switch (action.type) {\n    case types.ADD_BOOK:\n      return [...state, { ...action.book }];\n    case types.UPDATE_BOOK:\n      return state.map(book => {\n        return book.id === action.book.id ? action.book : book;\n      });\n    case types.GET_BOOKS:\n      return [...action.books];\n    case types.DELETE_BOOK:\n      return state.filter(book => book.id !== action.book.id);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}