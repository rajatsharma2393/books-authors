{"ast":null,"code":"var _jsxFileName = \"/Users/rajatsharma/Documents/Practice/React/books_authors/src/components/Home/home.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadBooks } from \"../../actions/bookActions\";\nimport { loadAuthors } from \"../../actions/authorActions\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport StarRatings from \"react-star-ratings\";\n\nclass Home extends React.Component {\n  componentDidMount() {\n    if (!this.props.books || this.props.books.length === 0) {\n      this.props.loadBooks();\n    }\n\n    if (!this.props.authors || this.props.authors.length === 0) {\n      this.props.loadAuthors();\n    }\n  }\n\n  render() {\n    console.log(\"Rendered\");\n    let topAuthors = [...this.props.authors].sort((a, b) => b.rating - a.rating).slice(0, 2);\n    let topBooks = [...this.props.books].sort((a, b) => b.rating - a.rating).slice(0, 2);\n    let books = topBooks.map(book => React.createElement(\"div\", {\n      key: book.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, book.name), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(StarRatings, {\n      rating: book.rating,\n      starRatedColor: \"blue\",\n      numberOfStars: 5,\n      name: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })));\n    let authors = topAuthors.map(author => React.createElement(\"div\", {\n      key: author.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, author.name), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(StarRatings, {\n      rating: author.rating,\n      starRatedColor: \"blue\",\n      numberOfStars: 5,\n      name: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n    return React.createElement(React.Fragment, null, this.props.apiCallInProgress ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Loading\") : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Top books\", books), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Top authors\", authors)));\n  }\n\n}\n\nHome.propTypes = {\n  books: PropTypes.array.isRequired,\n  authors: PropTypes.array.isRequired,\n  apiCallInProgress: PropTypes.bool.isRequired,\n  loadBooks: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    books: state.books,\n    authors: state.authors,\n    apiCallInProgress: state.apiCallInProgress\n  };\n}\n\nexport default connect(mapStateToProps, {\n  loadBooks,\n  loadAuthors\n})(Home);","map":{"version":3,"sources":["/Users/rajatsharma/Documents/Practice/React/books_authors/src/components/Home/home.js"],"names":["React","connect","loadBooks","loadAuthors","PropTypes","Link","StarRatings","Home","Component","componentDidMount","props","books","length","authors","render","console","log","topAuthors","sort","a","b","rating","slice","topBooks","map","book","id","name","author","apiCallInProgress","propTypes","array","isRequired","bool","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadBooks } from \"../../actions/bookActions\";\nimport { loadAuthors } from \"../../actions/authorActions\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport StarRatings from \"react-star-ratings\";\n\nclass Home extends React.Component {\n  componentDidMount() {\n    if (!this.props.books || this.props.books.length === 0) {\n      this.props.loadBooks();\n    }\n    if (!this.props.authors || this.props.authors.length === 0) {\n      this.props.loadAuthors();\n    }\n  }\n\n  render() {\n    console.log(\"Rendered\");\n    let topAuthors = [...this.props.authors]\n      .sort((a, b) => b.rating - a.rating)\n      .slice(0, 2);\n    let topBooks = [...this.props.books]\n      .sort((a, b) => b.rating - a.rating)\n      .slice(0, 2);\n\n    let books = topBooks.map(book => (\n      <div key={book.id}>\n        <span>{book.name}</span>\n        <br />\n        <StarRatings\n          rating={book.rating}\n          starRatedColor=\"blue\"\n          numberOfStars={5}\n          name=\"rating\"\n        />\n        <br />\n      </div>\n    ));\n    let authors = topAuthors.map(author => (\n      <div key={author.id}>\n        <span>{author.name}</span>\n        <br />\n        <StarRatings\n          rating={author.rating}\n          starRatedColor=\"blue\"\n          numberOfStars={5}\n          name=\"rating\"\n        />\n        <br />\n      </div>\n    ));\n    return (\n      <>\n        {this.props.apiCallInProgress ? (\n          <div>Loading</div>\n        ) : (\n          <>\n            <div>\n              Top books\n              {books}\n            </div>\n            <div>\n              Top authors\n              {authors}\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nHome.propTypes = {\n  books: PropTypes.array.isRequired,\n  authors: PropTypes.array.isRequired,\n  apiCallInProgress: PropTypes.bool.isRequired,\n  loadBooks: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    books: state.books,\n    authors: state.authors,\n    apiCallInProgress: state.apiCallInProgress\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { loadBooks, loadAuthors }\n)(Home);\n"]},"metadata":{},"sourceType":"module"}