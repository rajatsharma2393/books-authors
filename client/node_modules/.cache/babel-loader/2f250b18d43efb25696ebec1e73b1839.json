{"ast":null,"code":"import _objectSpread from \"/Users/rajatsharma/Documents/Practice/React/books_authors/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as types from \"../actions/actionType\";\nimport initialState from \"./initialState\";\nexport default ((state = initialState.authors, action) => {\n  console.log(action.type);\n\n  switch (action.type) {\n    case types.ADD_AUTHOR:\n      return [...state, _objectSpread({}, action.author)];\n\n    case types.UPDATE_AUTHOR:\n      return state.map(author => {\n        return author.id === action.author.id ? action.author : author;\n      });\n\n    case types.GET_AUTHORS:\n      return [...action.authors];\n\n    case types.DELETE_AUTHOR:\n      return state.filter(author => author.id !== action.author.id);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/rajatsharma/Documents/Practice/React/books_authors/src/reducers/author.js"],"names":["types","initialState","state","authors","action","console","log","type","ADD_AUTHOR","author","UPDATE_AUTHOR","map","id","GET_AUTHORS","DELETE_AUTHOR","filter"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,uBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,gBAAe,CAACC,KAAK,GAAGD,YAAY,CAACE,OAAtB,EAA+BC,MAA/B,KAA0C;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;;AACA,UAAQH,MAAM,CAACG,IAAf;AACE,SAAKP,KAAK,CAACQ,UAAX;AACE,aAAO,CAAC,GAAGN,KAAJ,oBAAgBE,MAAM,CAACK,MAAvB,EAAP;;AACF,SAAKT,KAAK,CAACU,aAAX;AACE,aAAOR,KAAK,CAACS,GAAN,CAAUF,MAAM,IAAI;AACzB,eAAOA,MAAM,CAACG,EAAP,KAAcR,MAAM,CAACK,MAAP,CAAcG,EAA5B,GAAiCR,MAAM,CAACK,MAAxC,GAAiDA,MAAxD;AACD,OAFM,CAAP;;AAGF,SAAKT,KAAK,CAACa,WAAX;AACE,aAAO,CAAC,GAAGT,MAAM,CAACD,OAAX,CAAP;;AACF,SAAKH,KAAK,CAACc,aAAX;AACE,aAAOZ,KAAK,CAACa,MAAN,CAAaN,MAAM,IAAIA,MAAM,CAACG,EAAP,KAAcR,MAAM,CAACK,MAAP,CAAcG,EAAnD,CAAP;;AACF;AACE,aAAOV,KAAP;AAZJ;AAcD,CAhBD","sourcesContent":["import * as types from \"../actions/actionType\";\nimport initialState from \"./initialState\";\n\nexport default (state = initialState.authors, action) => {\n  console.log(action.type);\n  switch (action.type) {\n    case types.ADD_AUTHOR:\n      return [...state, { ...action.author }];\n    case types.UPDATE_AUTHOR:\n      return state.map(author => {\n        return author.id === action.author.id ? action.author : author;\n      });\n    case types.GET_AUTHORS:\n      return [...action.authors];\n    case types.DELETE_AUTHOR:\n      return state.filter(author => author.id !== action.author.id);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}