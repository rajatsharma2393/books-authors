{"ast":null,"code":"import _objectSpread from \"/Users/rajatsharma/Documents/Practice/React/books_authors/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/rajatsharma/Documents/Practice/React/books_authors/src/components/Books/manageBook.js\";\nimport React, { Component } from \"react\";\nimport { updateBook, addBook } from \"../../actions/bookActions\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass ManageBook extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      book: _objectSpread({}, this.props.currentBook)\n    };\n\n    this.handleChange = event => {\n      let _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      console.log(name + \"   \" + value);\n      this.setState({\n        book: _objectSpread({}, this.state.book, {\n          [name]: value\n        })\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.book.id) {\n        this.props.updateBook(this.state.book);\n      } else {\n        this.props.addBook(this.state.book);\n      }\n\n      this.props.history.push(\"/books\");\n    };\n  }\n\n  render() {\n    let book = this.state.book;\n    let authors = this.props.authors.map(author => React.createElement(\"option\", {\n      value: author.id,\n      key: author.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, author.name));\n    return React.createElement(React.Fragment, null, this.props.books.length === 0 && React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Book Id:\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: book.id,\n      onChange: this.handleChange,\n      name: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Book Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: book.name,\n      onChange: this.handleChange,\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      defaultValue: book.authorId,\n      onChange: this.handleChange,\n      name: \"authorId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, authors), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, book.id === 0 ? \"Add\" : \"Update\")));\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const bookId = parseInt(ownProps.match.params.id);\n  let currentBook = {\n    id: 0,\n    name: \"\",\n    authorId: 0\n  };\n\n  if (bookId !== 0 && state.books.length > 0) {\n    currentBook = state.books.find(book => book.id === bookId) || currentBook;\n  }\n\n  return {\n    currentBook: currentBook,\n    books: state.books,\n    authors: state.authors\n  };\n}\n\nconst mapDispatchToProps = {\n  updateBook,\n  addBook\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageBook);","map":{"version":3,"sources":["/Users/rajatsharma/Documents/Practice/React/books_authors/src/components/Books/manageBook.js"],"names":["React","Component","updateBook","addBook","connect","Link","Redirect","ManageBook","state","book","props","currentBook","handleChange","event","target","name","value","console","log","setState","handleSubmit","preventDefault","id","history","push","render","authors","map","author","books","length","authorId","mapStateToProps","ownProps","bookId","parseInt","match","params","find","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { updateBook, addBook } from \"../../actions/bookActions\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass ManageBook extends Component {\n  state = { book: { ...this.props.currentBook } };\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    console.log(name + \"   \" + value);\n    this.setState({\n      book: {\n        ...this.state.book,\n        [name]: value\n      }\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.book.id) {\n      this.props.updateBook(this.state.book);\n    } else {\n      this.props.addBook(this.state.book);\n    }\n    this.props.history.push(\"/books\");\n  };\n\n  render() {\n    let book = this.state.book;\n\n    let authors = this.props.authors.map(author => (\n      <option value={author.id} key={author.id}>\n        {author.name}\n      </option>\n    ));\n    return (\n      <>\n        {this.props.books.length === 0 && <Redirect to=\"/\" />}\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"id\">Book Id:</label>\n          <input\n            type=\"text\"\n            value={book.id}\n            onChange={this.handleChange}\n            name=\"id\"\n          />\n          <br />\n          <label htmlFor=\"name\">Book Name:</label>\n          <input\n            type=\"text\"\n            value={book.name}\n            onChange={this.handleChange}\n            name=\"name\"\n          />\n          <br />\n          <select\n            defaultValue={book.authorId}\n            onChange={this.handleChange}\n            name=\"authorId\"\n          >\n            {authors}\n          </select>\n          <br />\n          <button type=\"submit\">{book.id === 0 ? \"Add\" : \"Update\"}</button>\n        </form>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const bookId = parseInt(ownProps.match.params.id);\n\n  let currentBook = {\n    id: 0,\n    name: \"\",\n    authorId: 0\n  };\n\n  if (bookId !== 0 && state.books.length > 0) {\n    currentBook = state.books.find(book => book.id === bookId) || currentBook;\n  }\n\n  return {\n    currentBook: currentBook,\n    books: state.books,\n    authors: state.authors\n  };\n}\n\nconst mapDispatchToProps = {\n  updateBook,\n  addBook\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ManageBook);\n"]},"metadata":{},"sourceType":"module"}