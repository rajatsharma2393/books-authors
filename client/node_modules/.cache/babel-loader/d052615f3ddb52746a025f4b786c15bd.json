{"ast":null,"code":"import _objectSpread from \"/Users/rajatsharma/Documents/Practice/React/books_authors/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as types from \"../actions/actionType\";\nimport initialState from \"./initialState\";\nexport default ((state = initialState.authors, action) => {\n  console.log(action.type);\n  console.log(JSON.stringify(action.author));\n\n  switch (action.type) {\n    case types.ADD_AUTHOR:\n      return [...state, _objectSpread({}, action.author)];\n\n    case types.UPDATE_AUTHOR:\n      return state.map(author => {\n        return author.id === action.author.id ? action.author : author;\n      });\n\n    case types.GET_AUTHORS:\n      return [...action.authors];\n\n    case types.DELETE_AUTHOR:\n      return state.filter(author => author.id !== action.author.id);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/rajatsharma/Documents/Practice/React/books_authors/src/reducers/author.js"],"names":["types","initialState","state","authors","action","console","log","type","JSON","stringify","author","ADD_AUTHOR","UPDATE_AUTHOR","map","id","GET_AUTHORS","DELETE_AUTHOR","filter"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,uBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,gBAAe,CAACC,KAAK,GAAGD,YAAY,CAACE,OAAtB,EAA+BC,MAA/B,KAA0C;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACC,SAAL,CAAeL,MAAM,CAACM,MAAtB,CAAZ;;AACA,UAAQN,MAAM,CAACG,IAAf;AACE,SAAKP,KAAK,CAACW,UAAX;AACE,aAAO,CAAC,GAAGT,KAAJ,oBAAgBE,MAAM,CAACM,MAAvB,EAAP;;AACF,SAAKV,KAAK,CAACY,aAAX;AACE,aAAOV,KAAK,CAACW,GAAN,CAAUH,MAAM,IAAI;AACzB,eAAOA,MAAM,CAACI,EAAP,KAAcV,MAAM,CAACM,MAAP,CAAcI,EAA5B,GAAiCV,MAAM,CAACM,MAAxC,GAAiDA,MAAxD;AACD,OAFM,CAAP;;AAGF,SAAKV,KAAK,CAACe,WAAX;AACE,aAAO,CAAC,GAAGX,MAAM,CAACD,OAAX,CAAP;;AACF,SAAKH,KAAK,CAACgB,aAAX;AACE,aAAOd,KAAK,CAACe,MAAN,CAAaP,MAAM,IAAIA,MAAM,CAACI,EAAP,KAAcV,MAAM,CAACM,MAAP,CAAcI,EAAnD,CAAP;;AACF;AACE,aAAOZ,KAAP;AAZJ;AAcD,CAjBD","sourcesContent":["import * as types from \"../actions/actionType\";\nimport initialState from \"./initialState\";\n\nexport default (state = initialState.authors, action) => {\n  console.log(action.type);\n  console.log(JSON.stringify(action.author));\n  switch (action.type) {\n    case types.ADD_AUTHOR:\n      return [...state, { ...action.author }];\n    case types.UPDATE_AUTHOR:\n      return state.map(author => {\n        return author.id === action.author.id ? action.author : author;\n      });\n    case types.GET_AUTHORS:\n      return [...action.authors];\n    case types.DELETE_AUTHOR:\n      return state.filter(author => author.id !== action.author.id);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}