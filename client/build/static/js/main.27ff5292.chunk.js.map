{"version":3,"sources":["actions/actionType.js","actions/bookActions.js","actions/authorActions.js","components/Home/home.js","components/common/header.js","components/Books/manageBook.js","components/Author/manageAuthor.js","App.js","serviceWorker.js","reducers/initialState.js","reducers/index.js","reducers/book.js","reducers/author.js","reducers/apiStatusReducer.js","index.js"],"names":["ADD_BOOK","UPDATE_BOOK","GET_BOOKS","DELETE_BOOK","ADD_AUTHOR","UPDATE_AUTHOR","GET_AUTHORS","DELETE_AUTHOR","SWITCH","addBook","book","type","types","updateBook","switchApiCallStatus","loadBooks","dispatch","books","id","name","authorId","rating","Promise","resolve","reject","getBooksFromApi","then","batch","getBooks","deleteBook","addAuthor","author","updateAuthor","deleteAuthor","loadAuthors","authors","bookIds","getAuthors","Home","this","props","length","topAuthors","sort","a","b","slice","map","key","to","src","starRatedColor","numberOfStars","apiCallInProgress","className","React","Component","connect","state","alt","activeClassName","exact","ManageBook","currentBook","handleChange","event","target","value","setState","handleSubmit","preventDefault","history","push","onSubmit","htmlFor","onChange","defaultValue","mapDispatchToProps","ownProps","bookId","parseInt","match","params","location","find","ManageAuthor","currentAuthor","handleAddAnotherBook","filter","onClick","Books","lazy","Authors","App","path","component","fallback","manageAuthor","Boolean","window","hostname","combineReducers","initialState","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","reduxImmutableStateInvariant","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8GAAA,kTAAO,IAAMA,EAAW,WACXC,EAAc,cACdC,EAAY,YACZC,EAAc,cAEdC,EAAa,aACbC,EAAgB,gBAChBC,EAAc,cACdC,EAAgB,gBAEhBC,EAAS,U,gCCVtB,0JAGO,SAASC,EAAQC,GACtB,MAAO,CAAEC,KAAMC,IAAgBF,QAG1B,SAASG,EAAWH,GACzB,MAAO,CAAEC,KAAMC,IAAmBF,QAOpC,SAASI,IACP,MAAO,CAAEH,KAAMC,KAgCV,SAASG,IACd,OAAO,SAASC,GAEd,OADAA,EAASF,KA/Bb,WACE,IAAIG,EAAQ,CACV,CACEC,GAAI,EACJC,KAAM,aACNC,SAAU,EACVC,OAAQ,KAEV,CACEH,GAAI,EACJC,KAAM,cACNC,SAAU,EACVC,OAAQ,KAEV,CACEH,GAAI,EACJC,KAAM,aACNC,SAAU,EACVC,OAAQ,MAGZ,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAI3BD,EAAQN,MAODQ,GAAkBC,MAAK,SAAAT,GAC5BU,aAAM,WACJX,EA1CD,SAAkBC,GACvB,MAAO,CAAEN,KAAMC,IAAiBK,SAyCjBW,CAASX,IAClBD,EAASF,YAMV,SAASe,EAAWnB,GACzB,MAAO,CAAEC,KAAMC,IAAmBF,U,gCC7DpC,mJAEO,SAASoB,EAAUC,GACxB,MAAO,CAAEpB,KAAMC,IAAkBmB,UAG5B,SAASC,EAAaD,GAC3B,MAAO,CAAEpB,KAAMC,IAAqBmB,UAO/B,SAASE,EAAaF,GAC3B,MAAO,CAAEpB,KAAMC,IAAqBmB,UAG/B,SAASG,IACd,IAAIC,EAAU,CACZ,CACEjB,GAAI,EACJC,KAAM,eACNiB,QAAS,GACTf,OAAQ,KAEV,CACEH,GAAI,EACJC,KAAM,gBACNiB,QAAS,GACTf,OAAQ,KAEV,CACEH,GAAI,EACJC,KAAM,eACNiB,QAAS,GACTf,OAAQ,MAIZ,OAAO,SAASL,GACdA,EA/BG,SAAoBmB,GACzB,MAAO,CAAExB,KAAMC,IAAmBuB,WA8BvBE,CAAWF,O,sSChClBG,E,4LAEGC,KAAKC,MAAMvB,OAAqC,IAA5BsB,KAAKC,MAAMvB,MAAMwB,QACxCF,KAAKC,MAAMzB,YAERwB,KAAKC,MAAML,SAAyC,IAA9BI,KAAKC,MAAML,QAAQM,QAC5CF,KAAKC,MAAMN,gB,+BAKb,IAAIQ,EAAa,YAAIH,KAAKC,MAAML,SAC7BQ,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAExB,OAASuB,EAAEvB,UAC5ByB,MAAM,EAAG,GAKR7B,EAJW,YAAIsB,KAAKC,MAAMvB,OAC3B0B,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAExB,OAASuB,EAAEvB,UAC5ByB,MAAM,EAAG,GAESC,KAAI,SAAArC,GAAI,OAC3B,yBAAKsC,IAAKtC,EAAKQ,IACb,6BACE,kBAAC,IAAD,CAAM+B,GAAE,gBAAWvC,EAAKQ,KACtB,yBAAKgC,IAAI,kBACRxC,EAAKS,OAGV,kBAAC,IAAD,CACEE,OAAQX,EAAKW,OACb8B,eAAe,OACfC,cAAe,EACfjC,KAAK,WAEP,iCAGAgB,EAAUO,EAAWK,KAAI,SAAAhB,GAAM,OACjC,yBAAKiB,IAAKjB,EAAOb,IACf,6BACE,kBAAC,IAAD,CAAM+B,GAAE,kBAAalB,EAAOb,KAC1B,yBAAKgC,IAAI,kBACRnB,EAAOZ,OAGZ,kBAAC,IAAD,CACEE,OAAQU,EAAOV,OACf8B,eAAe,OACfC,cAAe,EACfjC,KAAK,eAIX,OACE,oCACGoB,KAAKC,MAAMa,kBACV,wCAEA,oCACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,SAAf,aACA,yBAAKA,UAAU,SAASrC,IAE1B,yBAAKqC,UAAU,eACb,yBAAKA,UAAU,SAAf,eACA,yBAAKA,UAAU,WAAWnB,U,GA/DrBoB,IAAMC,WAuFVC,mBARf,SAAyBC,GACvB,MAAO,CACLzC,MAAOyC,EAAMzC,MACbkB,QAASuB,EAAMvB,QACfkB,kBAAmBK,EAAML,qBAM3B,CAAEtC,cAAWmB,iBAFAuB,CAGbnB,GC/Fa,G,MAAA,WACb,OACE,gCACE,yBAAKgB,UAAU,gBACb,yBAAKJ,IAAI,gBAAgBS,IAAI,uBAE/B,yBAAKL,UAAU,eACb,kBAAC,IAAD,CAASL,GAAG,IAAIW,gBAAgB,cAAcC,OAAK,GAAnD,QAGA,kBAAC,IAAD,CAASZ,GAAG,SAASW,gBAAgB,eAArC,SAGA,kBAAC,IAAD,CAASX,GAAG,WAAWW,gBAAgB,eAAvC,e,gBCZFE,E,2MACJJ,MAAQ,CAAEhD,KAAK,eAAM,EAAK8B,MAAMuB,c,EAEhCC,aAAe,SAAAC,GAAU,IAAD,EACAA,EAAMC,OAAtB/C,EADgB,EAChBA,KAAMgD,EADU,EACVA,MACZ,EAAKC,SAAS,CACZ1D,KAAK,eACA,EAAKgD,MAAMhD,KADZ,eAEDS,EAAOgD,O,EAKdE,aAAe,SAAAJ,GACbA,EAAMK,iBACF,EAAKZ,MAAMhD,KAAKQ,GAClB,EAAKsB,MAAM3B,WAAW,EAAK6C,MAAMhD,MAEjC,EAAK8B,MAAM/B,QAAQ,EAAKiD,MAAMhD,MAEhC,EAAK8B,MAAM+B,QAAQC,KAAK,W,wEAIxB,IAAI9D,EAAO6B,KAAKmB,MAAMhD,KAClByB,EAAUI,KAAKC,MAAML,QAAQY,KAAI,SAAAhB,GAAM,OACzC,4BAAQoC,MAAOpC,EAAOb,GAAI8B,IAAKjB,EAAOb,IACnCa,EAAOZ,SAGZ,OACE,oCAC+B,IAA5BoB,KAAKC,MAAMvB,MAAMwB,QAAgB,kBAAC,IAAD,CAAUQ,GAAG,MAC/C,0BAAMwB,SAAUlC,KAAK8B,cACnB,2BAAOK,QAAQ,MAAf,YACA,2BACE/D,KAAK,OACLwD,MAAOzD,EAAKQ,GACZyD,SAAUpC,KAAKyB,aACf7C,KAAK,OAEP,6BACA,2BAAOuD,QAAQ,QAAf,cACA,2BACE/D,KAAK,OACLwD,MAAOzD,EAAKS,KACZwD,SAAUpC,KAAKyB,aACf7C,KAAK,SAEP,6BACA,4BACEyD,aAAclE,EAAKU,SACnBuD,SAAUpC,KAAKyB,aACf7C,KAAK,YAEJgB,GAEH,6BACA,4BAAQxB,KAAK,UAAsB,IAAZD,EAAKQ,GAAW,MAAQ,gB,GA1DhCsC,aAsFzB,IAAMqB,EAAqB,CACzBhE,eACAJ,aAGagD,eA1Bf,SAAyBC,EAAOoB,GAC9B,IAAMC,EAASC,SAASF,EAASG,MAAMC,OAAOhE,IAC1CE,EAAW,EACX0D,EAASK,SAASzB,QAAOtC,EAAW0D,EAASK,SAASzB,MAAMtC,UAChE,IAAI2C,EAAc,CAChB7C,GAAI,EACJC,KAAM,GACNC,SAAUA,GAAsB,GAOlC,OAJe,IAAX2D,GAAgBrB,EAAMzC,MAAMwB,OAAS,IACvCsB,EAAcL,EAAMzC,MAAMmE,MAAK,SAAA1E,GAAI,OAAIA,EAAKQ,KAAO6D,MAAWhB,GAGzD,CACLA,YAAaA,EACb9C,MAAOyC,EAAMzC,MACbkB,QAASuB,EAAMvB,WAWjB0C,EAFapB,CAGbK,GC9FIuB,E,2MACJ3B,MAAQ,CAAE3B,OAAO,eAAM,EAAKS,MAAM8C,gB,EAElCtB,aAAe,SAAAC,GAAU,IAAD,EACAA,EAAMC,OAAtB/C,EADgB,EAChBA,KAAMgD,EADU,EACVA,MACZ,EAAKC,SAAS,CACZrC,OAAO,eACF,EAAK2B,MAAM3B,OADV,eAEHZ,EAAOgD,O,EAKdE,aAAe,SAAAJ,GACbA,EAAMK,iBACF,EAAKZ,MAAM3B,OAAOb,GACpB,EAAKsB,MAAMR,aAAa,EAAK0B,MAAM3B,QAEnC,EAAKS,MAAMV,UAAU,EAAK4B,MAAM3B,QAElC,EAAKS,MAAM+B,QAAQC,KAAK,a,EAG1Be,qBAAuB,WACrB,EAAK/C,MAAM+B,QAAQC,KAAK,UAAW,CACjCpD,SAAU,EAAKsC,MAAM3B,OAAOb,M,wEAK9B,IAAIa,EAASQ,KAAKmB,MAAM3B,OAIpBd,EAHqBsB,KAAKC,MAAMvB,MAAMuE,QACxC,SAAA9E,GAAI,OAAIA,EAAKU,WAAaW,EAAOb,MAEJ6B,KAAI,SAAArC,GAAI,OACrC,wBAAIsC,IAAKtC,EAAKQ,IAAKR,EAAKS,SAE1B,OACE,oCAC+B,IAA5BoB,KAAKC,MAAMvB,MAAMwB,QAAgB,kBAAC,IAAD,CAAUQ,GAAG,MAC/C,0BAAMwB,SAAUlC,KAAK8B,cACnB,2BAAOK,QAAQ,MAAf,cACA,2BACE/D,KAAK,OACLwD,MAAOpC,EAAOb,GACdyD,SAAUpC,KAAKyB,aACf7C,KAAK,OAEP,6BACA,2BAAOuD,QAAQ,QAAf,gBACA,2BACE/D,KAAK,OACLwD,MAAOpC,EAAOZ,KACdwD,SAAUpC,KAAKyB,aACf7C,KAAK,SAEP,6BACA,4BAAKF,GACL,6BACA,4BAAQwE,QAASlD,KAAKgD,sBAAtB,oBACA,6BACA,4BAAQ5E,KAAK,UAAwB,IAAdoB,EAAOb,GAAW,MAAQ,gB,GA7DhCsC,aAyF3B,IAAMqB,EAAqB,CACzB7C,iBACAF,eAGa2B,eA1Bf,SAAyBC,EAAOoB,GAC9B,IAAM1D,EAAW4D,SAASF,EAASG,MAAMC,OAAOhE,IAE5CoE,EAAgB,CAClBpE,GAAI,EACJC,KAAM,GACNiB,QAAS,IAQX,OALiB,IAAbhB,GAAkBsC,EAAMvB,QAAQM,OAAS,IAC3C6C,EACE5B,EAAMvB,QAAQiD,MAAK,SAAArD,GAAM,OAAIA,EAAOb,KAAOE,MAAakE,GAGrD,CACLA,cAAeA,EACfrE,MAAOyC,EAAMzC,MACbkB,QAASuB,EAAMvB,WAWjB0C,EAFapB,CAGb4B,GC1FIK,EAAQC,gBAAK,kBAAM,gCACnBC,EAAUD,gBAAK,kBAAM,gCAmBZE,MAjBf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOhC,OAAK,EAACiC,KAAK,IAAIC,UAAWzD,IACjC,kBAAC,WAAD,CAAU0D,SAAU,oDAClB,kBAAC,IAAD,CAAOF,KAAK,cAAcC,UAAWE,IACrC,kBAAC,IAAD,CAAOpC,OAAK,EAACiC,KAAK,WAAWC,UAAWH,IACxC,kBAAC,IAAD,CAAO/B,OAAK,EAACiC,KAAK,SAASC,UAAWL,IACtC,kBAAC,IAAD,CAAOI,KAAK,YAAYC,UAAWjC,QCbzBoC,QACW,cAA7BC,OAAOhB,SAASiB,UAEe,UAA7BD,OAAOhB,SAASiB,UAEhBD,OAAOhB,SAASiB,SAASnB,MACvB,2D,mBClBS,GACbhE,MAAO,GACPkB,QAAS,GACTkB,mBAAmB,GCENgD,kBAAgB,CAAEpF,MCFlB,WAAyC,IAAxCyC,EAAuC,uDAA/B4C,EAAarF,MAAOsF,EAAW,uCACrD,OAAQA,EAAO5F,MACb,KAAKC,IACH,MAAM,GAAN,mBAAW8C,GAAX,gBAAuB6C,EAAO7F,QAChC,KAAKE,IACH,OAAO8C,EAAMX,KAAI,SAAArC,GACf,OAAOA,EAAKQ,KAAOqF,EAAO7F,KAAKQ,GAAKqF,EAAO7F,KAAOA,KAEtD,KAAKE,IACH,OAAO,YAAI2F,EAAOtF,OACpB,KAAKL,IACH,OAAO8C,EAAM8B,QAAO,SAAA9E,GAAI,OAAIA,EAAKQ,KAAOqF,EAAO7F,KAAKQ,MACtD,QACE,OAAOwC,IDX2BvB,QEFzB,WAA2C,IAA1CuB,EAAyC,uDAAjC4C,EAAanE,QAASoE,EAAW,uCACvD,OAAQA,EAAO5F,MACb,KAAKC,IACH,MAAM,GAAN,mBAAW8C,GAAX,gBAAuB6C,EAAOxE,UAChC,KAAKnB,IACH,OAAO8C,EAAMX,KAAI,SAAAhB,GACf,OAAOA,EAAOb,KAAOqF,EAAOxE,OAAOb,GAAKqF,EAAOxE,OAASA,KAE5D,KAAKnB,IACH,OAAO,YAAI2F,EAAOpE,SACpB,KAAKvB,IACH,OAAO8C,EAAM8B,QAAO,SAAAzD,GAAM,OAAIA,EAAOb,KAAOqF,EAAOxE,OAAOb,MAC5D,QACE,OAAOwC,IFXoCL,kBGFlC,WAGZ,IAFDK,EAEA,uDAFQ4C,EAAajD,kBAGrB,OADA,wCACW1C,OAASC,KACD,IAAV8C,EAGFA,K,yBCAH8C,EAAmBL,OAAOM,sCAAwCC,IACpEC,EAAQC,YACVC,EACAL,EAAiBM,YAAgBC,IAAOC,SAG1CC,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJQ,SAASC,eAAe,SN0GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7F,MAAK,SAAA8F,GACjCA,EAAaC,kB","file":"static/js/main.27ff5292.chunk.js","sourcesContent":["export const ADD_BOOK = \"ADD_BOOK\";\nexport const UPDATE_BOOK = \"UPDATE_BOOK\";\nexport const GET_BOOKS = \"GET_BOOKS\";\nexport const DELETE_BOOK = \"DELETE_BOOK\";\n\nexport const ADD_AUTHOR = \"ADD_AUTHOR\";\nexport const UPDATE_AUTHOR = \"UPDATE_AUTHOR\";\nexport const GET_AUTHORS = \"GET_AUTHORS\";\nexport const DELETE_AUTHOR = \"DELETE_AUTHOR\";\n\nexport const SWITCH = \"SWITCH\";\n","import * as types from \"./actionType\";\nimport { batch } from \"react-redux\";\n\nexport function addBook(book) {\n  return { type: types.ADD_BOOK, book };\n}\n\nexport function updateBook(book) {\n  return { type: types.UPDATE_BOOK, book };\n}\n\nexport function getBooks(books) {\n  return { type: types.GET_BOOKS, books };\n}\n\nfunction switchApiCallStatus() {\n  return { type: types.SWITCH };\n}\n\nfunction getBooksFromApi() {\n  let books = [\n    {\n      id: 1,\n      name: \"First Book\",\n      authorId: 2,\n      rating: 3.5\n    },\n    {\n      id: 2,\n      name: \"Second Book\",\n      authorId: 1,\n      rating: 2.5\n    },\n    {\n      id: 3,\n      name: \"Third Book\",\n      authorId: 3,\n      rating: 4.5\n    }\n  ];\n  return new Promise((resolve, reject) => {\n    // setTimeout(() => {\n    //   resolve(books);\n    // }, 1000);\n    resolve(books);\n  });\n}\n\nexport function loadBooks() {\n  return function(dispatch) {\n    dispatch(switchApiCallStatus());\n    return getBooksFromApi().then(books => {\n      batch(() => {\n        dispatch(getBooks(books));\n        dispatch(switchApiCallStatus());\n      });\n    });\n  };\n}\n\nexport function deleteBook(book) {\n  return { type: types.DELETE_BOOK, book };\n}\n","import * as types from \"./actionType\";\n\nexport function addAuthor(author) {\n  return { type: types.ADD_AUTHOR, author };\n}\n\nexport function updateAuthor(author) {\n  return { type: types.UPDATE_AUTHOR, author };\n}\n\nexport function getAuthors(authors) {\n  return { type: types.GET_AUTHORS, authors };\n}\n\nexport function deleteAuthor(author) {\n  return { type: types.DELETE_AUTHOR, author };\n}\n\nexport function loadAuthors() {\n  let authors = [\n    {\n      id: 1,\n      name: \"First Author\",\n      bookIds: [],\n      rating: 3.5\n    },\n    {\n      id: 2,\n      name: \"Second Author\",\n      bookIds: [],\n      rating: 2.5\n    },\n    {\n      id: 3,\n      name: \"Third Author\",\n      bookIds: [],\n      rating: 4.5\n    }\n  ];\n\n  return function(dispatch) {\n    dispatch(getAuthors(authors));\n  };\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadBooks } from \"../../actions/bookActions\";\nimport { loadAuthors } from \"../../actions/authorActions\";\nimport PropTypes from \"prop-types\";\nimport \"./home.css\";\nimport StarRatings from \"react-star-ratings\";\nimport { Link } from \"react-router-dom\";\n\nclass Home extends React.Component {\n  componentDidMount() {\n    if (!this.props.books || this.props.books.length === 0) {\n      this.props.loadBooks();\n    }\n    if (!this.props.authors || this.props.authors.length === 0) {\n      this.props.loadAuthors();\n    }\n  }\n\n  render() {\n    let topAuthors = [...this.props.authors]\n      .sort((a, b) => b.rating - a.rating)\n      .slice(0, 2);\n    let topBooks = [...this.props.books]\n      .sort((a, b) => b.rating - a.rating)\n      .slice(0, 2);\n\n    let books = topBooks.map(book => (\n      <div key={book.id}>\n        <div>\n          <Link to={`/book/${book.id}`}>\n            <img src=\"./logo192.png\" />\n            {book.name}\n          </Link>\n        </div>\n        <StarRatings\n          rating={book.rating}\n          starRatedColor=\"blue\"\n          numberOfStars={5}\n          name=\"rating\"\n        />\n        <br />\n      </div>\n    ));\n    let authors = topAuthors.map(author => (\n      <div key={author.id}>\n        <div>\n          <Link to={`/author/${author.id}`}>\n            <img src=\"./logo192.png\" />\n            {author.name}\n          </Link>\n        </div>\n        <StarRatings\n          rating={author.rating}\n          starRatedColor=\"blue\"\n          numberOfStars={5}\n          name=\"rating\"\n        />\n      </div>\n    ));\n    return (\n      <>\n        {this.props.apiCallInProgress ? (\n          <div>Loading</div>\n        ) : (\n          <>\n            <div className=\"top-books\">\n              <div className=\"label\">Top Books</div>\n              <div className=\"books\">{books}</div>\n            </div>\n            <div className=\"top-authors\">\n              <div className=\"label\">Top Authors</div>\n              <div className=\"authors\">{authors}</div>\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nHome.propTypes = {\n  books: PropTypes.array.isRequired,\n  authors: PropTypes.array.isRequired,\n  apiCallInProgress: PropTypes.bool.isRequired,\n  loadBooks: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    books: state.books,\n    authors: state.authors,\n    apiCallInProgress: state.apiCallInProgress\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { loadBooks, loadAuthors }\n)(Home);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./header.css\";\n\nexport default () => {\n  return (\n    <header>\n      <div className=\"header-image\">\n        <img src=\"./logo192.png\" alt=\" cannot be loaded\" />\n      </div>\n      <div className=\"header-navs\">\n        <NavLink to=\"/\" activeClassName=\"activeRoute\" exact>\n          Home\n        </NavLink>\n        <NavLink to=\"/books\" activeClassName=\"activeRoute\">\n          Books\n        </NavLink>\n        <NavLink to=\"/authors\" activeClassName=\"activeRoute\">\n          Authors\n        </NavLink>\n      </div>\n    </header>\n  );\n};\n","import React, { Component } from \"react\";\nimport { updateBook, addBook } from \"../../actions/bookActions\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass ManageBook extends Component {\n  state = { book: { ...this.props.currentBook } };\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({\n      book: {\n        ...this.state.book,\n        [name]: value\n      }\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.book.id) {\n      this.props.updateBook(this.state.book);\n    } else {\n      this.props.addBook(this.state.book);\n    }\n    this.props.history.push(\"/books\");\n  };\n\n  render() {\n    let book = this.state.book;\n    let authors = this.props.authors.map(author => (\n      <option value={author.id} key={author.id}>\n        {author.name}\n      </option>\n    ));\n    return (\n      <>\n        {this.props.books.length === 0 && <Redirect to=\"/\" />}\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"id\">Book Id:</label>\n          <input\n            type=\"text\"\n            value={book.id}\n            onChange={this.handleChange}\n            name=\"id\"\n          />\n          <br />\n          <label htmlFor=\"name\">Book Name:</label>\n          <input\n            type=\"text\"\n            value={book.name}\n            onChange={this.handleChange}\n            name=\"name\"\n          />\n          <br />\n          <select\n            defaultValue={book.authorId}\n            onChange={this.handleChange}\n            name=\"authorId\"\n          >\n            {authors}\n          </select>\n          <br />\n          <button type=\"submit\">{book.id === 0 ? \"Add\" : \"Update\"}</button>\n        </form>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const bookId = parseInt(ownProps.match.params.id);\n  let authorId = 0;\n  if (ownProps.location.state) authorId = ownProps.location.state.authorId;\n  let currentBook = {\n    id: 0,\n    name: \"\",\n    authorId: authorId ? authorId : 0\n  };\n\n  if (bookId !== 0 && state.books.length > 0) {\n    currentBook = state.books.find(book => book.id === bookId) || currentBook;\n  }\n\n  return {\n    currentBook: currentBook,\n    books: state.books,\n    authors: state.authors\n  };\n}\n\nconst mapDispatchToProps = {\n  updateBook,\n  addBook\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ManageBook);\n","import React, { Component } from \"react\";\nimport { updateAuthor, addAuthor } from \"../../actions/authorActions\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass ManageAuthor extends Component {\n  state = { author: { ...this.props.currentAuthor } };\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({\n      author: {\n        ...this.state.author,\n        [name]: value\n      }\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.author.id) {\n      this.props.updateAuthor(this.state.author);\n    } else {\n      this.props.addAuthor(this.state.author);\n    }\n    this.props.history.push(\"/authors\");\n  };\n\n  handleAddAnotherBook = () => {\n    this.props.history.push(\"/book/0\", {\n      authorId: this.state.author.id\n    });\n  };\n\n  render() {\n    let author = this.state.author;\n    let currentAuthorBooks = this.props.books.filter(\n      book => book.authorId === author.id\n    );\n    let books = currentAuthorBooks.map(book => (\n      <li key={book.id}>{book.name}</li>\n    ));\n    return (\n      <>\n        {this.props.books.length === 0 && <Redirect to=\"/\" />}\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"id\">Author Id:</label>\n          <input\n            type=\"text\"\n            value={author.id}\n            onChange={this.handleChange}\n            name=\"id\"\n          />\n          <br />\n          <label htmlFor=\"name\">Author Name:</label>\n          <input\n            type=\"text\"\n            value={author.name}\n            onChange={this.handleChange}\n            name=\"name\"\n          />\n          <br />\n          <ul>{books}</ul>\n          <br />\n          <button onClick={this.handleAddAnotherBook}>Add another Book</button>\n          <br />\n          <button type=\"submit\">{author.id === 0 ? \"Add\" : \"Update\"}</button>\n        </form>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const authorId = parseInt(ownProps.match.params.id);\n\n  let currentAuthor = {\n    id: 0,\n    name: \"\",\n    bookIds: []\n  };\n\n  if (authorId !== 0 && state.authors.length > 0) {\n    currentAuthor =\n      state.authors.find(author => author.id === authorId) || currentAuthor;\n  }\n\n  return {\n    currentAuthor: currentAuthor,\n    books: state.books,\n    authors: state.authors\n  };\n}\n\nconst mapDispatchToProps = {\n  updateAuthor,\n  addAuthor\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ManageAuthor);\n","import React from \"react\";\nimport { Suspense, lazy } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport ApolloClient from \"apollo-boost\";\nimport \"./App.css\";\n\nimport Home from \"./components/Home/home\";\nimport Header from \"./components/common/header\";\nimport ManageBook from \"./components/Books/manageBook\";\nimport manageAuthor from \"./components/Author/manageAuthor\";\n\nconst Books = lazy(() => import(\"./components/Books/books\"));\nconst Authors = lazy(() => import(\"./components/Author/authors\"));\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Suspense fallback={<h1>Still Loading…</h1>}>\n          <Route path=\"/author/:id\" component={manageAuthor} />\n          <Route exact path=\"/authors\" component={Authors} />\n          <Route exact path=\"/books\" component={Books} />\n          <Route path=\"/book/:id\" component={ManageBook} />\n        </Suspense>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n  books: [],\n  authors: [],\n  apiCallInProgress: false\n};\n","import { combineReducers } from \"redux\";\nimport books from \"./book\";\nimport authors from \"./author\";\nimport apiCallInProgress from \"./apiStatusReducer\";\n\nexport default combineReducers({ books, authors, apiCallInProgress });\n","import * as types from \"../actions/actionType\";\nimport initialState from \"./initialState\";\n\nexport default (state = initialState.books, action) => {\n  switch (action.type) {\n    case types.ADD_BOOK:\n      return [...state, { ...action.book }];\n    case types.UPDATE_BOOK:\n      return state.map(book => {\n        return book.id === action.book.id ? action.book : book;\n      });\n    case types.GET_BOOKS:\n      return [...action.books];\n    case types.DELETE_BOOK:\n      return state.filter(book => book.id !== action.book.id);\n    default:\n      return state;\n  }\n};\n","import * as types from \"../actions/actionType\";\nimport initialState from \"./initialState\";\n\nexport default (state = initialState.authors, action) => {\n  switch (action.type) {\n    case types.ADD_AUTHOR:\n      return [...state, { ...action.author }];\n    case types.UPDATE_AUTHOR:\n      return state.map(author => {\n        return author.id === action.author.id ? action.author : author;\n      });\n    case types.GET_AUTHORS:\n      return [...action.authors];\n    case types.DELETE_AUTHOR:\n      return state.filter(author => author.id !== action.author.id);\n    default:\n      return state;\n  }\n};\n","import * as types from \"../actions/actionType\";\nimport initialState from \"./initialState\";\n\nexport default function apiCallStatusReducer(\n  state = initialState.apiCallInProgress,\n  action\n) {\n  if (action.type === types.SWITCH) {\n    return state === true ? false : true;\n  }\n\n  return state;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"./reducers\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\nlet store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(thunk, reduxImmutableStateInvariant()))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}